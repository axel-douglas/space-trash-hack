# --- path guard para Streamlit Cloud ---
import sys, pathlib
ROOT = pathlib.Path(__file__).resolve().parents[1]  # carpeta ra√≠z del repo
if str(ROOT) not in sys.path:
    sys.path.insert(0, str(ROOT))
# ---------------------------------------

import streamlit as st

# ‚ö†Ô∏è Debe ser la PRIMERA llamada de Streamlit en la p√°gina
st.set_page_config(
    page_title="Space Trash Hack ‚Äî Demo",
    page_icon="üõ∞Ô∏è",
    layout="wide"
)

from pathlib import Path
from app.modules.ui_blocks import inject_css, card, section

# Ahora s√≠, podemos inyectar CSS (esto usa st.markdown por dentro)
inject_css()

st.markdown("# üõ∞Ô∏è Space Trash Hack ‚Äî Demo")
st.markdown("**Objetivo:** convertir basura inorg√°nica en productos √∫tiles, minimizando agua/energ√≠a/tiempo de tripulaci√≥n y evitando PFAS/micropl√°sticos/incineraci√≥n.")

col1, col2 = st.columns([2,1], gap="large")

with col1:
    section("Flujo en 4 pasos")
    card("1) Inventario",
         "Carg√°/edita residuos disponibles (tabla NASA simplificada).")
    card("2) Objetivo",
         "Eleg√≠ producto y prioridades (agua/energ√≠a/tiempo/seguridad).")
    card("3) Generador",
         "Recetas (mezclas) + proceso sugerido con predicciones.")
    card("4) Resultados",
         "Pareto, Sankey, checklist y m√©tricas de impacto.")

with col2:
    st.subheader("Estado del sistema")
    data_ok = Path("../data/waste_inventory_sample.csv").exists()
    st.write("Datos de ejemplo:", "‚úÖ" if data_ok else "‚ùå")
    st.caption("`data/waste_inventory_sample.csv` | `process_catalog.csv` | `targets_presets.json`")
    st.write("Modo:", "Demo local (modelos ligeros)")
    st.write("Restricciones:", "Sin incineraci√≥n ‚Ä¢ Minimizar agua/energ√≠a ‚Ä¢ Evitar PFAS/micropl√°sticos")

st.markdown("---")
st.caption("Ruta: 1) Inventario ‚Üí 2) Objetivo ‚Üí 3) Generador ‚Üí 4) Resultados ‚Üí 5) Comparar ‚Üí 6) Pareto & Export ‚Üí 7) Playbooks ‚Üí 8) Feedback & Impact ‚Üí 9) Capacity Simulator")
