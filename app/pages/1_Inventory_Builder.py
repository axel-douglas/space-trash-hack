# --- path guard para Streamlit Cloud ---
import sys, pathlib
ROOT = pathlib.Path(__file__).resolve().parents[1]  # carpeta ra√≠z del repo
if str(ROOT) not in sys.path:
    sys.path.insert(0, str(ROOT))
# ---------------------------------------

import streamlit as st
import pandas as pd
from app.modules.io import load_waste_df, save_waste_df

# ‚ö†Ô∏è Primera llamada de Streamlit
st.set_page_config(page_title="Inventario", page_icon="üß±", layout="wide")

# --------------------------------------------------------------------
# Narrativa y explicaci√≥n
# --------------------------------------------------------------------
st.title("1) Inventario de residuos inorg√°nicos")
st.caption("üì¶ **Panel de laboratorio del h√°bitat** ‚Äî Aqu√≠ comienza todo: "
           "registrar con precisi√≥n qu√© basura espacial tenemos disponible.")

st.markdown("""
En cualquier misi√≥n, antes de fabricar **nuevas herramientas o piezas cr√≠ticas**,  
los astronautas necesitan saber **qu√© materiales tienen a mano**.  
Este inventario es como **el almac√©n de repuestos del futuro**: pl√°stico de empaques, 
fragmentos met√°licos, textiles t√©cnicos‚Ä¶ todo puede transformarse en algo √∫til.  

üëâ **Tu tarea ahora es completar este inventario como si fueras parte del equipo de la misi√≥n.**  
Cada fila representa un lote de residuo que podr√° convertirse en materia prima.
""")

# --------------------------------------------------------------------
# Cargar y mostrar datos
# --------------------------------------------------------------------
df = load_waste_df()

st.subheader("üìä Inventario editable")
st.caption("Agreg√°, edit√° o duplic√° filas para simular nuevos lotes. "
           "Guard√° antes de continuar al siguiente paso.")

edited = st.data_editor(
    df, num_rows="dynamic", use_container_width=True,
    key="waste_editor",
    column_config={
        "material": st.column_config.TextColumn("Material"),
        "kg": st.column_config.NumberColumn("Masa (kg)", min_value=0.0, step=0.1),
        "notes": st.column_config.TextColumn("Notas")
    }
)

if st.button("üíæ Guardar inventario", type="primary"):
    save_waste_df(edited)
    st.success("‚úÖ Inventario guardado. Los datos est√°n listos para los pr√≥ximos c√°lculos.")

# --------------------------------------------------------------------
# Explicaciones y tips
# --------------------------------------------------------------------
with st.expander("‚ÑπÔ∏è ¬øPor qu√© importa este paso? (explicaci√≥n para no expertos)"):
    st.markdown("""
- Si el inventario est√° **incompleto o mal cargado**, el generador de procesos 
  va a proponer recetas poco realistas.  
- En la misi√≥n real, esto equivaldr√≠a a **perder tiempo y recursos** valiosos 
  tratando de fabricar algo con materiales que no existen.  
- Cargar bien este inventario es como darle a la IA una **foto fiel del almac√©n**: 
  cuanto m√°s clara sea, mejores soluciones propondr√°.  
    """)

st.info("üí° **Tip de misi√≥n**: duplic√° una fila si quer√©s simular que llegaron "
        "m√°s lotes de un mismo residuo (ejemplo: varias bolsas de embalaje pl√°stico).")

# --------------------------------------------------------------------
# Narrativa de cierre
# --------------------------------------------------------------------
st.markdown("---")
st.success("‚úÖ **Inventario listo** ‚Äî Abr√≠ la p√°gina **2) Definir objetivo** para elegir qu√© fabricar.")

st.caption("üõ∞Ô∏è *Record√°: cada tornillo, cada retazo de pl√°stico, puede ser la diferencia "
           "entre una misi√≥n fallida y un logro hist√≥rico.*")
